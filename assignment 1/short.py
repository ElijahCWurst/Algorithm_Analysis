import scipy.special, scipy.stats, math
microSeconds = [1000000, 60*1000000, 60*60*1000000, 24*60*60*1000000, 30*24*60*60*1000000, 365*24*60*60*1000000, 100*365*24*60*60*1000000, "    Seconds:", "    Minutes:", "    Hours:", "    Days:", "    Months:", "    Years:", "    Centuries:"]
print(("\n\n\n\n\n\n\n\n\n\n\n    \tlg n:\tsqrt(n):\tn:\tn lg n:\tn^2:\tn^3:\t2^n:\tn!:\n").expandtabs(22))
for __ in range(7): print((microSeconds[__ + 7] + "\t" + str("2^" + str(microSeconds[__])) + "\t" + str(f"{str(microSeconds[__]**2)[0]}.{str(microSeconds[__]**2)[1:7]}*10^{len(str(microSeconds[__]**2))-1}") + "\t" + str(f"{str(microSeconds[__])[0]}.{str(microSeconds[__])[1:7]}*10^{len(str(microSeconds[__]))-1}") + "\t" + str(f"{str(int(math.e**scipy.special.lambertw((microSeconds[__]*math.log(2, math.e))).real))[0]}.{str(int(math.e**scipy.special.lambertw((microSeconds[__]*math.log(2, math.e))).real))[1:7]}*10^{len(str(int(math.e**scipy.special.lambertw((microSeconds[__]*math.log(2, math.e))).real)))-1}") + "\t" + str(f"{str(int(math.sqrt(microSeconds[__])))[0]}.{str(int(math.sqrt(microSeconds[__])))[1:7]}*10^{len(str(int(math.sqrt(microSeconds[__]))))-1}") + "\t" + str(f"{str(int(math.cbrt(microSeconds[__])))[0]}.{str(int(math.cbrt(microSeconds[__])))[1:7]}*10^{len(str(int(math.cbrt(microSeconds[__]))))-1}") + "\t" + str(f"{str(int(math.log2(microSeconds[__])))[0]}.{str(int(math.log2(microSeconds[__])))[1:7]}*10^{len(str(int(math.log2(microSeconds[__]))))-1}") + "\t" + str(int(math.e**(scipy.special.lambertw(math.log(((microSeconds[__])/math.sqrt(2*math.pi)), math.e)/math.e).real+1)-0.5)) + "\n").expandtabs(22))